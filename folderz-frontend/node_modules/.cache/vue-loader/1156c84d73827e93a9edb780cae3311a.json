{"remainingRequest":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\src\\components\\player\\Player-buttons.vue?vue&type=style&index=0&id=3b91177a&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\src\\components\\player\\Player-buttons.vue","mtime":1566820209728},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.player-ihm {\n    height: 100%;\n}\n.button-container {\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 15px;\n}\n.button-container * {\n    margin: 5px;\n}\n.button-container *:hover{\n    color: rgb(126, 126, 126);\n}  \n.time-code {\n    margin-top: 5px;\n    display: block;\n    color : white; \n    font-size: 0.75em;\n}\n.start-time {\n    float : left;\n}\n.end-time {\n    float : right;\n    text-align: right;\n}\n\n",{"version":3,"sources":["Player-buttons.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Player-buttons.vue","sourceRoot":"src/components/player","sourcesContent":["<template>\r\n    <div class=\"player-ihm\">\r\n        <div class=\"row button-container\">\r\n            <font-awesome-icon icon=\"arrow-circle-left\" size=\"3x\"></font-awesome-icon>\r\n            <font-awesome-icon :icon=\"iconPlayState\" size=\"4x\" @click=\"playTrigger()\"></font-awesome-icon>\r\n            <font-awesome-icon icon=\"arrow-circle-right\" size=\"3x\"></font-awesome-icon>\r\n        </div>\r\n        <div class=\"row progress-slide-bar\">            \r\n            <input type=\"range\" :style=\"customBackground\" @input=\"progressBarClicked()\" v-model=\"currentTime\"  min=\"0\" :max=\"fullTime\"/>\r\n        </div>\r\n        <div class=\"row time-code\">            \r\n            <div class=\"start-time\">{{secondsToDisplay(this.currentTime)}}</div>\r\n            <div class=\"end-time\">{{secondsToDisplay(this.fullTime)}}</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\nimport { faPlayCircle, faPauseCircle, faArrowCircleLeft, faArrowCircleRight } from '@fortawesome/free-solid-svg-icons'\r\n\r\n \r\nlibrary.add(faPlayCircle, faPauseCircle, faArrowCircleLeft, faArrowCircleRight);\r\n \r\nVue.component('font-awesome-icon', FontAwesomeIcon);\r\n\r\nexport default {\r\n    data () {\r\n        return {\r\n            currentTime : 0,\r\n            fullTime : 0,\r\n            customBackground : '', \r\n            playing: false,\r\n            iconPlayState : 'play-circle'\r\n        }\r\n    }, \r\n    methods : {\r\n        init : function(videoDuration){\r\n            this.playing = false;\r\n            this.iconPlayState = 'play-circle';\r\n            this.fullTime = videoDuration;\r\n        },\r\n        secondsToDisplay : function(valueInSeconds) {\r\n            let minute = Math.floor(valueInSeconds / 60);\r\n            let seconds = valueInSeconds % 60;\r\n            return minute + \":\" + (\"0\" + seconds).slice(-2);\r\n        }, \r\n        progressBarClicked() {\r\n            this.updateProgressBar();\r\n            this.$emit(\"updateVideoTimer\", this.currentTime);\r\n        },\r\n        updateProgressBar : function() {\r\n            var positionalValue = (this.currentTime)/(this.fullTime)*100;\r\n            var positionalValueTo = positionalValue + 0.1;\r\n            let backgroundStyle = 'linear-gradient(to right, #ffffff ' + positionalValue + '%, #808080 ' + positionalValueTo + '%)';\r\n            this.customBackground = 'background-image : ' + backgroundStyle;\r\n        }, \r\n        playTrigger : function() {            \r\n            this.playing = !this.playing;\r\n            if(this.playing) {\r\n                this.iconPlayState = 'pause-circle';                \r\n            }\r\n            else {\r\n                this.iconPlayState = 'play-circle';\r\n            }\r\n            this.$emit('playClicked');            \r\n        }, \r\n        updateTimeDisplay : function(value) {\r\n            this.currentTime = Math.round(value);\r\n            this.updateProgressBar();\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .player-ihm {\r\n        height: 100%;\r\n    }\r\n    .button-container {\r\n        align-items: center;\r\n        justify-content: center;\r\n        margin-bottom: 15px;\r\n    }\r\n    .button-container * {\r\n        margin: 5px;\r\n    }\r\n    .button-container *:hover{\r\n        color: rgb(126, 126, 126);\r\n    }  \r\n    .time-code {\r\n        margin-top: 5px;\r\n        display: block;\r\n        color : white; \r\n        font-size: 0.75em;\r\n    }\r\n    .start-time {\r\n        float : left;\r\n    }\r\n    .end-time {\r\n        float : right;\r\n        text-align: right;\r\n    }\r\n    \r\n</style>"]}]}