{"remainingRequest":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\src\\views\\AddSong.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\src\\views\\AddSong.vue","mtime":1565686268850},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.inputs{\n    background-color: #f8f9fa;\n    margin-top: 30px;\n    box-shadow: -9px 9px 8px -5px rgba(166,164,166,1);\n    padding: 30px;\n    color: black;\n    margin-bottom: 15px;\n}\n.formNewSong label{\n    text-align: left;\n    font-weight: bold;\n}\n.buttons {\n  background-color: #f8f9fa;\n  box-shadow: -9px 9px 8px -5px rgba(166,164,166,1);\n  background-color: aliceblue;\n  padding: 30px;\n}\n",{"version":3,"sources":["AddSong.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddSong.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"container formNewSong\">\r\n        <b-form @submit=\"onSubmit\" @reset=\"onReset\" v-if=\"show\">\r\n            <div class=\"inputs\">     \r\n              <div class=\"input-group\">       \r\n                <label for=\"title\">Title</label>\r\n                <input v-model=\"form.title\" name=\"title\" placeholder=\"Title ...\" type=\"text\"/>  \r\n              </div>   \r\n              <div class=\"input-group\">\r\n                <label for=\"artist\">Artist</label>\r\n                <input v-model=\"form.artist\" name=\"artist\" placeholder=\"Artist ...\" type=\"text\"/> \r\n              </div>\r\n              <div class=\"input-group\">\r\n                <label for=\"ytUrl\">YouTube Url</label>\r\n                <input v-model=\"form.ytUrl\" name=\"ytUrl\" placeholder=\"Url ...\" type=\"text\"/> \r\n              </div>\r\n              <div class=\"input-group\">\r\n                <label for=\"date\">Date</label>\r\n                <input v-model=\"form.date\" name=\"date\" placeholder=\"Date ...\" type=\"date\"/>      \r\n              </div>            \r\n            </div>\r\n            <div class=\"buttons\">\r\n                <b-button type=\"reset\" variant=\"danger\">Reset</b-button> | \r\n                <b-button type=\"submit\" variant=\"primary\">Submit</b-button>  \r\n            </div>      \r\n        </b-form>\r\n  </div>\r\n</template>\r\n<script>\r\n  import axios from \"axios\";\r\n  import { server } from \"../helper\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {\r\n          title: '',\r\n          artist: '',\r\n          ytUrl: '',\r\n          date:'',          \r\n        },\r\n        show: true\r\n      }\r\n    },\r\n    methods: {     \r\n      onSubmit() {\r\n      let songData = {\r\n          title: this.form.title,\r\n          artist: this.form.artist,\r\n          youtubeUrl: this.form.ytUrl,\r\n          releaseDate: this.form.date\r\n      };\r\n      this.__submitToServer(songData);\r\n    },\r\n    __submitToServer(dataPost) {\r\n      let self = this;\r\n      axios.post(`${server.baseURL}/song/new`, dataPost).then(function() {\r\n        self.$router.push({ name: \"home\" });\r\n      });\r\n    },\r\n\r\n      onReset(evt) {\r\n        evt.preventDefault()\r\n        // Reset our form values\r\n        this.form.email = ''\r\n        this.form.name = ''\r\n        this.form.food = null\r\n        this.form.checked = []\r\n        // Trick to reset/clear native browser form validation state\r\n        this.show = false\r\n        this.$nextTick(() => {\r\n          this.show = true\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n\r\n    .inputs{\r\n        background-color: #f8f9fa;\r\n        margin-top: 30px;\r\n        box-shadow: -9px 9px 8px -5px rgba(166,164,166,1);\r\n        padding: 30px;\r\n        color: black;\r\n        margin-bottom: 15px;\r\n    }\r\n    .formNewSong label{\r\n        text-align: left;\r\n        font-weight: bold;\r\n    }\r\n    .buttons {\r\n      background-color: #f8f9fa;\r\n      box-shadow: -9px 9px 8px -5px rgba(166,164,166,1);\r\n      background-color: aliceblue;\r\n      padding: 30px;\r\n    }\r\n</style>\r\n"]}]}