{"remainingRequest":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\src\\components\\player\\Player-buttons.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\src\\components\\player\\Player-buttons.vue","mtime":1566820209728},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\nimport { faPlayCircle, faPauseCircle, faArrowCircleLeft, faArrowCircleRight } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faPlayCircle, faPauseCircle, faArrowCircleLeft, faArrowCircleRight);\nVue.component('font-awesome-icon', FontAwesomeIcon);\nexport default {\n  data: function data() {\n    return {\n      currentTime: 0,\n      fullTime: 0,\n      customBackground: '',\n      playing: false,\n      iconPlayState: 'play-circle'\n    };\n  },\n  methods: {\n    init: function init(videoDuration) {\n      this.playing = false;\n      this.iconPlayState = 'play-circle';\n      this.fullTime = videoDuration;\n    },\n    secondsToDisplay: function secondsToDisplay(valueInSeconds) {\n      var minute = Math.floor(valueInSeconds / 60);\n      var seconds = valueInSeconds % 60;\n      return minute + \":\" + (\"0\" + seconds).slice(-2);\n    },\n    progressBarClicked: function progressBarClicked() {\n      this.updateProgressBar();\n      this.$emit(\"updateVideoTimer\", this.currentTime);\n    },\n    updateProgressBar: function updateProgressBar() {\n      var positionalValue = this.currentTime / this.fullTime * 100;\n      var positionalValueTo = positionalValue + 0.1;\n      var backgroundStyle = 'linear-gradient(to right, #ffffff ' + positionalValue + '%, #808080 ' + positionalValueTo + '%)';\n      this.customBackground = 'background-image : ' + backgroundStyle;\n    },\n    playTrigger: function playTrigger() {\n      this.playing = !this.playing;\n\n      if (this.playing) {\n        this.iconPlayState = 'pause-circle';\n      } else {\n        this.iconPlayState = 'play-circle';\n      }\n\n      this.$emit('playClicked');\n    },\n    updateTimeDisplay: function updateTimeDisplay(value) {\n      this.currentTime = Math.round(value);\n      this.updateProgressBar();\n    }\n  }\n};",{"version":3,"sources":["Player-buttons.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,OAAA,GAAA,MAAA,KAAA;AACA,SAAA,OAAA,QAAA,mCAAA;AACA,SAAA,eAAA,QAAA,8BAAA;AACA,SAAA,YAAA,EAAA,aAAA,EAAA,iBAAA,EAAA,kBAAA,QAAA,mCAAA;AAGA,OAAA,CAAA,GAAA,CAAA,YAAA,EAAA,aAAA,EAAA,iBAAA,EAAA,kBAAA;AAEA,GAAA,CAAA,SAAA,CAAA,mBAAA,EAAA,eAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,CADA;AAEA,MAAA,QAAA,EAAA,CAFA;AAGA,MAAA,gBAAA,EAAA,EAHA;AAIA,MAAA,OAAA,EAAA,KAJA;AAKA,MAAA,aAAA,EAAA;AALA,KAAA;AAOA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,IAAA,EAAA,cAAA,aAAA,EAAA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,WAAA,aAAA,GAAA,aAAA;AACA,WAAA,QAAA,GAAA,aAAA;AACA,KALA;AAMA,IAAA,gBAAA,EAAA,0BAAA,cAAA,EAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,cAAA,GAAA,EAAA,CAAA;AACA,UAAA,OAAA,GAAA,cAAA,GAAA,EAAA;AACA,aAAA,MAAA,GAAA,GAAA,GAAA,CAAA,MAAA,OAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,KAVA;AAWA,IAAA,kBAXA,gCAWA;AACA,WAAA,iBAAA;AACA,WAAA,KAAA,CAAA,kBAAA,EAAA,KAAA,WAAA;AACA,KAdA;AAeA,IAAA,iBAAA,EAAA,6BAAA;AACA,UAAA,eAAA,GAAA,KAAA,WAAA,GAAA,KAAA,QAAA,GAAA,GAAA;AACA,UAAA,iBAAA,GAAA,eAAA,GAAA,GAAA;AACA,UAAA,eAAA,GAAA,uCAAA,eAAA,GAAA,aAAA,GAAA,iBAAA,GAAA,IAAA;AACA,WAAA,gBAAA,GAAA,wBAAA,eAAA;AACA,KApBA;AAqBA,IAAA,WAAA,EAAA,uBAAA;AACA,WAAA,OAAA,GAAA,CAAA,KAAA,OAAA;;AACA,UAAA,KAAA,OAAA,EAAA;AACA,aAAA,aAAA,GAAA,cAAA;AACA,OAFA,MAGA;AACA,aAAA,aAAA,GAAA,aAAA;AACA;;AACA,WAAA,KAAA,CAAA,aAAA;AACA,KA9BA;AA+BA,IAAA,iBAAA,EAAA,2BAAA,KAAA,EAAA;AACA,WAAA,WAAA,GAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA;AACA,WAAA,iBAAA;AACA;AAlCA;AAVA,CAAA","sourcesContent":["<template>\r\n    <div class=\"player-ihm\">\r\n        <div class=\"row button-container\">\r\n            <font-awesome-icon icon=\"arrow-circle-left\" size=\"3x\"></font-awesome-icon>\r\n            <font-awesome-icon :icon=\"iconPlayState\" size=\"4x\" @click=\"playTrigger()\"></font-awesome-icon>\r\n            <font-awesome-icon icon=\"arrow-circle-right\" size=\"3x\"></font-awesome-icon>\r\n        </div>\r\n        <div class=\"row progress-slide-bar\">            \r\n            <input type=\"range\" :style=\"customBackground\" @input=\"progressBarClicked()\" v-model=\"currentTime\"  min=\"0\" :max=\"fullTime\"/>\r\n        </div>\r\n        <div class=\"row time-code\">            \r\n            <div class=\"start-time\">{{secondsToDisplay(this.currentTime)}}</div>\r\n            <div class=\"end-time\">{{secondsToDisplay(this.fullTime)}}</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\nimport { faPlayCircle, faPauseCircle, faArrowCircleLeft, faArrowCircleRight } from '@fortawesome/free-solid-svg-icons'\r\n\r\n \r\nlibrary.add(faPlayCircle, faPauseCircle, faArrowCircleLeft, faArrowCircleRight);\r\n \r\nVue.component('font-awesome-icon', FontAwesomeIcon);\r\n\r\nexport default {\r\n    data () {\r\n        return {\r\n            currentTime : 0,\r\n            fullTime : 0,\r\n            customBackground : '', \r\n            playing: false,\r\n            iconPlayState : 'play-circle'\r\n        }\r\n    }, \r\n    methods : {\r\n        init : function(videoDuration){\r\n            this.playing = false;\r\n            this.iconPlayState = 'play-circle';\r\n            this.fullTime = videoDuration;\r\n        },\r\n        secondsToDisplay : function(valueInSeconds) {\r\n            let minute = Math.floor(valueInSeconds / 60);\r\n            let seconds = valueInSeconds % 60;\r\n            return minute + \":\" + (\"0\" + seconds).slice(-2);\r\n        }, \r\n        progressBarClicked() {\r\n            this.updateProgressBar();\r\n            this.$emit(\"updateVideoTimer\", this.currentTime);\r\n        },\r\n        updateProgressBar : function() {\r\n            var positionalValue = (this.currentTime)/(this.fullTime)*100;\r\n            var positionalValueTo = positionalValue + 0.1;\r\n            let backgroundStyle = 'linear-gradient(to right, #ffffff ' + positionalValue + '%, #808080 ' + positionalValueTo + '%)';\r\n            this.customBackground = 'background-image : ' + backgroundStyle;\r\n        }, \r\n        playTrigger : function() {            \r\n            this.playing = !this.playing;\r\n            if(this.playing) {\r\n                this.iconPlayState = 'pause-circle';                \r\n            }\r\n            else {\r\n                this.iconPlayState = 'play-circle';\r\n            }\r\n            this.$emit('playClicked');            \r\n        }, \r\n        updateTimeDisplay : function(value) {\r\n            this.currentTime = Math.round(value);\r\n            this.updateProgressBar();\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .player-ihm {\r\n        height: 100%;\r\n    }\r\n    .button-container {\r\n        align-items: center;\r\n        justify-content: center;\r\n        margin-bottom: 15px;\r\n    }\r\n    .button-container * {\r\n        margin: 5px;\r\n    }\r\n    .button-container *:hover{\r\n        color: rgb(126, 126, 126);\r\n    }  \r\n    .time-code {\r\n        margin-top: 5px;\r\n        display: block;\r\n        color : white; \r\n        font-size: 0.75em;\r\n    }\r\n    .start-time {\r\n        float : left;\r\n    }\r\n    .end-time {\r\n        float : right;\r\n        text-align: right;\r\n    }\r\n    \r\n</style>"],"sourceRoot":"src/components/player"}]}