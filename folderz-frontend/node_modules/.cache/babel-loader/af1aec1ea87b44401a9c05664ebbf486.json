{"remainingRequest":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\src\\views\\Song\\SongList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\src\\views\\Song\\SongList.vue","mtime":1566549571835},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\amarinier\\Documents\\NestProject\\Folderz\\folderz-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SongListItem from '@/components/songs/SongListItem.vue';\nimport Axios from 'axios';\nimport { server } from \"../../helper\";\nimport { getIdFromURL } from 'vue-youtube-embed';\nexport default {\n  data: function data() {\n    return {\n      songs: [],\n      playerSongId: ''\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    Axios.get(\"\".concat(server.baseURL, \"/song/all\")).then(function (data) {\n      return _this.songs = data.data;\n    });\n  },\n  components: {\n    SongListItem: SongListItem\n  },\n  methods: {\n    playsong: function playsong(songId) {\n      this.playerSongId = songId;\n      this.$modal.show('ytPlayer');\n      this.$emit(\"playSong\", this.songs.find(function (x) {\n        return getIdFromURL(x.youtubeUrl) == songId;\n      }));\n    }\n  }\n};",{"version":3,"sources":["SongList.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA,OAAA,YAAA,MAAA,qCAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,MAAA;AACA,SAAA,YAAA,QAAA,mBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAGA,MAAA,YAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,OARA,qBAQA;AAAA;;AACA,IAAA,KAAA,CAAA,GAAA,WAAA,MAAA,CAAA,OAAA,gBAAA,IAAA,CAAA,UAAA,IAAA;AAAA,aAAA,KAAA,CAAA,KAAA,GAAA,IAAA,CAAA,IAAA;AAAA,KAAA;AACA,GAVA;AAWA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA;AADA,GAXA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,QAAA,EAAA,kBAAA,MAAA,EAAA;AACA,WAAA,YAAA,GAAA,MAAA;AACA,WAAA,MAAA,CAAA,IAAA,CAAA,UAAA;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,KAAA,KAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,YAAA,CAAA,CAAA,CAAA,UAAA,CAAA,IAAA,MAAA;AAAA,OAAA,CAAA;AACA;AALA;AAdA,CAAA","sourcesContent":["<template>\r\n    <div class=\"container-fluid songs-list\">\r\n        <modal name=\"ytPlayer\" width=\"640\" height=\"360\">\r\n            <youtube :videoId=\"playerSongId\"></youtube>\r\n        </modal>\r\n        <SongListItem v-for=\"item in songs\" :key=\"item.id\" :song=\"item\" @playClicked=\"playsong\"/>        \r\n    </div>  \r\n</template>\r\n\r\n\r\n<script>\r\n    import SongListItem from '@/components/songs/SongListItem.vue'\r\n    import Axios from 'axios';\r\n    import { server } from \"../../helper\";\r\n    import { getIdFromURL } from 'vue-youtube-embed';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                songs : [\r\n                ],\r\n                playerSongId : ''\r\n            }\r\n        },\r\n        created() {\r\n            Axios.get(`${server.baseURL}/song/all`).then(data => this.songs = data.data);\r\n        },\r\n        components : {\r\n            SongListItem\r\n        }, \r\n        methods : {\r\n            playsong : function(songId) {\r\n                this.playerSongId = songId;\r\n                this.$modal.show('ytPlayer');\r\n                this.$emit(\"playSong\", this.songs.find(x => getIdFromURL(x.youtubeUrl) == songId));\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .songs-list {\r\n        margin: 0px;\r\n    }\r\n</style>"],"sourceRoot":"src/views/Song"}]}